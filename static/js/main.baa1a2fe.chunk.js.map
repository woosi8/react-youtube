{"version":3,"sources":["components/video_list/video_list.module.css","components/video_item/video_item.module.css","components/search_header/search_header.module.css","app.module.css","components/video_item/video_item.jsx","components/video_list/video_list.jsx","components/search_header/search_header.jsx","components/video_detail/video_detail.jsx","app.jsx","service/youtube.js","index.js","components/video_detail/video_detail.module.css"],"names":["module","exports","VideoItem","memo","video","snippet","onVideoClick","displayType","display","styles","list","grid","className","container","onClick","thumbnail","src","thumbnails","medium","url","alt","metadata","title","channel","channelTitle","VideoList","videos","map","id","SearchHeader","onSearch","inputRef","useRef","handleSearch","value","current","header","logo","img","process","ref","input","type","placeholder","onKeyPress","event","key","button","buttonImg","VideoDetail","detail","width","height","frameBorder","allowFullScreen","description","App","youtube","useState","setVideos","selectedVideo","setSelectedVideo","loading","setLoading","search","useCallback","query","setTimeout","then","console","log","useEffect","mostPopular","app","spinner","content","Youtube","httpClient","this","get","params","part","chart","maxResults","response","data","items","q","item","videoId","axios","create","baseURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.baa1a2fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"videos\":\"video_list_videos__nmCd_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"video_item_container__3mGAH\",\"list\":\"video_item_list__wKtAW\",\"grid\":\"video_item_grid__28Fak\",\"video\":\"video_item_video__3oAqO\",\"thumbnail\":\"video_item_thumbnail__182jr\",\"metadata\":\"video_item_metadata__9eRrd\",\"title\":\"video_item_title__3KaNB\",\"channel\":\"video_item_channel__2nTni\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"search_header_header__fSeaa\",\"logo\":\"search_header_logo___4Ad2\",\"input\":\"search_header_input__30BDq\",\"button\":\"search_header_button__1Abga\",\"buttonImg\":\"search_header_buttonImg__2t9Tc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__3fiIV\",\"content\":\"app_content__1Mkgx\",\"detail\":\"app_detail__iAlI0\",\"list\":\"app_list__1CqUD\",\"loading\":\"app_loading__36nGx\",\"spinner\":\"app_spinner__1zIhq\"};","import React, { memo } from \"react\";\r\nimport styles from \"./video_item.module.css\";\r\n\r\n//memo 준 이유 ? 전달된 props(video,onVideoClick,display)이 변경이 되지 않으면   리랜더가될이유가 없기때문에 기억하고 있으라고 메모한다\r\nconst VideoItem = memo(\r\n\t({ video, video: { snippet }, onVideoClick, display }) => {\r\n\t\tconst displayType = display === \"list\" ? styles.list : styles.grid;\r\n\t\treturn (\r\n\t\t\t<li\r\n\t\t\t\tclassName={`${styles.container} ${displayType}`}\r\n\t\t\t\tonClick={() => onVideoClick(video)} //클릭시  app에 selectVideo로 연결, 선택한 video가 전달됨\r\n\t\t\t>\r\n\t\t\t\t<div className={styles.video}>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName={styles.thumbnail}\r\n\t\t\t\t\t\tsrc={snippet.thumbnails.medium.url}\r\n\t\t\t\t\t\talt=\"video thumbnail\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className={styles.metadata}>\r\n\t\t\t\t\t\t<p className={styles.title}>{snippet.title}</p>\r\n\t\t\t\t\t\t<p className={styles.channel}>{snippet.channelTitle}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</li>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default VideoItem;\r\n","import React from \"react\";\r\nimport VideoItem from \"../video_item/video_item\";\r\nimport styles from \"./video_list.module.css\";\r\n\r\nconst VideoList = ({ videos, onVideoClick, display }) => (\r\n\t<ul className={styles.videos}>\r\n\t\t{videos.map((video) => (\r\n\t\t\t<VideoItem\r\n\t\t\t\tkey={video.id} //포스트맨에서 보면 key가 아이디로 안들어가있어서\r\n\t\t\t\tvideo={video}\r\n\t\t\t\tonVideoClick={onVideoClick} //app에 selectVideo로 연결\r\n\t\t\t\tdisplay={display}\r\n\t\t\t/>\r\n\t\t))}\r\n\t</ul>\r\n);\r\n\r\nexport default VideoList;\r\n","import React, { memo, useRef } from \"react\";\r\nimport styles from \"./search_header.module.css\";\r\n\r\nconst SearchHeader = memo(({ onSearch }) => {\r\n\tconst inputRef = useRef(); // 메모 API 랜더링되어도 동일한 참조값을 유지해준다\r\n\tconst handleSearch = () => {\r\n\t\tconst value = inputRef.current.value;\r\n\t\tonSearch(value);\r\n\t};\r\n\tconst onClick = () => {\r\n\t\thandleSearch(); // 클릭하면 함수가 발생하여 입력값을 key로 전달한다\r\n\t};\r\n\r\n\tconst onKeyPress = (event) => {\r\n\t\tif (event.key === \"Enter\") {\r\n\t\t\thandleSearch();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<header className={styles.header}>\r\n\t\t\t<div className={styles.logo}>\r\n\t\t\t\t{/* <img className={styles.img} src=\"./images/logo.png\" alt=\"logo\" /> */}\r\n\t\t\t\t<img\r\n\t\t\t\t\tclassName={styles.img}\r\n\t\t\t\t\tsrc={process.env.PUBLIC_URL + \"/images/logo.png\"}\r\n\t\t\t\t\talt=\"logo\"\r\n\t\t\t\t/>\r\n\t\t\t\t<h1 className={styles.title}>Youtube</h1>\r\n\t\t\t</div>\r\n\t\t\t<input\r\n\t\t\t\tref={inputRef}\r\n\t\t\t\tclassName={styles.input}\r\n\t\t\t\ttype=\"search\"\r\n\t\t\t\tplaceholder=\"Search...\"\r\n\t\t\t\tonKeyPress={onKeyPress}\r\n\t\t\t/>\r\n\t\t\t<button className={styles.button} type=\"submit\" onClick={onClick}>\r\n\t\t\t\t<img\r\n\t\t\t\t\tclassName={styles.buttonImg}\r\n\t\t\t\t\tsrc={process.env.PUBLIC_URL + \"/images/search.png\"}\r\n\t\t\t\t\t// src={\"./images/search.png\"}\r\n\t\t\t\t\talt=\"search\"\r\n\t\t\t\t/>\r\n\t\t\t</button>\r\n\t\t</header>\r\n\t);\r\n});\r\n\r\nexport default SearchHeader;\r\n","import React from \"react\";\r\nimport styles from \"./video_detail.module.css\";\r\n\r\nconst VideoDetail = ({ video, video: { snippet } }) => (\r\n\t<section className={styles.detail}>\r\n\t\t<iframe\r\n\t\t\tclassName={styles.video}\r\n\t\t\ttype=\"text/html\"\r\n\t\t\ttitle=\"youtube video player\"\r\n\t\t\twidth=\"100%\"\r\n\t\t\theight=\"500px\"\r\n\t\t\tsrc={`https://www.youtube.com/embed/${video.id}`} // 아이프레임에서 embed까지\r\n\t\t\tframeBorder=\"0\"\r\n\t\t\tallowFullScreen\r\n\t\t></iframe>\r\n\t\t<h2>{snippet.title}</h2>\r\n\t\t<h3>{snippet.channelTitle}</h3>\r\n\t\t<pre className={styles.description}>{snippet.description}</pre>\r\n\t</section>\r\n);\r\n\r\nexport default VideoDetail;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styles from \"./app.module.css\";\nimport VideoList from \"./components/video_list/video_list\";\nimport SearchHeader from \"./components/search_header/search_header\";\nimport VideoDetail from \"./components/video_detail/video_detail\";\n\nfunction App({ youtube }) {\n\tconst [videos, setVideos] = useState([]); // 리액트훅 function component에서 state 사용하기\n\tconst [selectedVideo, setSelectedVideo] = useState(null); // 처음에는 null 선택된게 없으니\n\tconst [loading, setLoading] = useState(false);\n\n\t//VideoList onVideoClick이 발생되면 selectvideo를 받아온다\n\tconst selectVideo = (video) => {\n\t\tsetSelectedVideo(video);\n\t};\n\n\t//SearchHeader에서 input,button이벤트 발생시 onSearch에 입력값을 가져와서 실행\n\tconst search = useCallback(\n\t\t(query) => {\n\t\t\tsetSelectedVideo(null); // 상태 업데이트, 항상 먼저 초기화 되기. 검색이 됐다면 다시 검색시 이전 목록이 뜨게하기\n\t\t\tsetLoading(true);\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tyoutube //index에 있는 youtbue key 연결 , youtube.js에 class search 사용\n\t\t\t\t\t.search(query) //\n\t\t\t\t\t.then((videos) => {\n\t\t\t\t\t\tsetVideos(videos);\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\tconsole.log(\"loading\");\n\t\t\t\t\t});\n\t\t\t}, 1000);\n\t\t},\n\t\t[youtube]\n\t);\n\n\t// useEffect:리액트에게 렌더링 후 컴포넌트가 무언가를 해야 한다고 지시.\n\tuseEffect(() => {\n\t\tyoutube\n\t\t\t.mostPopular() // youtube클래스에서 가져온 mostpopular변수에서 videos를 가져온다\n\t\t\t.then((videos) => setVideos(videos)); //vidoes에 저장\n\t}, [youtube]);\n\treturn (\n\t\t<div className={styles.app}>\n\t\t\t{loading && (\n\t\t\t\t<section className={styles.loading}>\n\t\t\t\t\t<div className={styles.spinner}>Loading....</div>\n\t\t\t\t</section>\n\t\t\t)}\n\t\t\t<SearchHeader onSearch={search} />\n\t\t\t<section className={styles.content}>\n\t\t\t\t{selectedVideo && ( //selectedVideo 있다면 선택된 videodetail을 보여준다\n\t\t\t\t\t<div className={styles.detail}>\n\t\t\t\t\t\t<VideoDetail video={selectedVideo} />\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t<div className={styles.list}>\n\t\t\t\t\t<VideoList\n\t\t\t\t\t\tvideos={videos}\n\t\t\t\t\t\t//비디오 클릭시\n\t\t\t\t\t\tonVideoClick={selectVideo} //vidoeList에서 videoItem으로 가서 onClick시 발생된다\n\t\t\t\t\t\tdisplay={selectedVideo ? \"list\" : \"grid\"} //selectedVideo가 있으면 list 아니면 grid로\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","class Youtube {\r\n\tconstructor(httpClient) {\r\n\t\tthis.youtube = httpClient;\r\n\t}\r\n\r\n\tasync mostPopular() {\r\n\t\tconst response = await this.youtube.get(\"videos\", {\r\n\t\t\tparams: {\r\n\t\t\t\tpart: \"snippet\",\r\n\t\t\t\tchart: \"mostPopular\",\r\n\t\t\t\tmaxResults: 25,\r\n\t\t\t},\r\n\t\t});\r\n\t\treturn response.data.items;\r\n\t\t// axios 라이브러리 자체에서 json시켜준다\r\n\t}\r\n\r\n\tasync search(query) {\r\n\t\tconst response = await this.youtube.get(\"search\", {\r\n\t\t\tparams: {\r\n\t\t\t\tpart: \"snippet\",\r\n\t\t\t\tmaxResults: 25,\r\n\t\t\t\ttype: \"video\",\r\n\t\t\t\tq: query,\r\n\t\t\t},\r\n\t\t});\r\n\t\treturn response.data.items.map((item) => ({\r\n\t\t\t...item,\r\n\t\t\tid: item.id.videoId,\r\n\t\t}));\r\n\t}\r\n}\r\n\r\nexport default Youtube;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\nimport Youtube from \"./service/youtube\";\nimport axios from \"axios\";\n\n// 외부에서 통신방법을 못보게 하기위해\nconst httpClient = axios.create({\n\tbaseURL: \"https://youtube.googleapis.com/youtube/v3\",\n\tparams: { key: process.env.REACT_APP_YOUTUBE_API_KEY },\n});\nconst youtube = new Youtube(httpClient);\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App youtube={youtube} />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detail\":\"video_detail_detail__1fq-2\",\"description\":\"video_detail_description__1K4ZJ\"};"],"sourceRoot":""}